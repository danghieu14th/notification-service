version: '3.8'

services:
  db:
    image: mysql:latest
    restart: on-failure
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hieu
      MYSQL_DATABASE: docker_demo
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - my-network

  app:
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/docker_demo
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: hieu
    depends_on:
      - db
      - kafka
    networks:
      - my-network
  kafka:
    container_name: kafka-local
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - my-network
    volumes:
      - kafka-data:/bitnami/kafka

volumes:
  db-data:
    driver: local
  kafka-data:
    driver: local
networks:
  my-network:
    driver: bridge